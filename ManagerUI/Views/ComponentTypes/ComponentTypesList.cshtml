@using CatalogData

@{
    Layout = "~/Views/Shared/_MainApplication.cshtml";
    ViewBag.Title = "Component Types List";
}
<div class="col-10" style="font-size: 10px;">
    <div class="row m-3">
        <div class="col-12">
            <h3>Component Types</h3>
        </div>
    </div>
    <hr/>
    @(Html.Kendo().Grid<ComponentType>()
        .Name("ComponentTypesGrid")
        .Columns(columns =>
        {
            columns.Bound(m => m.CompTypeId).Title("Component Type Id");
            columns.Bound(m => m.CompTypeDescription).Title("Description").ClientTemplate(Html.ActionLink("#=CompTypeDescription#", "Index", "ComponentTypes", new { id = "#=CompTypeId#" }, null).ToHtmlString());
        })
        .ToolBar(toolbar =>
        {
            toolbar.Create().Text("New Component Type");
            toolbar.Excel();
        })
        .Editable(editable => editable.Mode(GridEditMode.InLine))
        .Sortable(sortable =>
        {
            sortable.SortMode(GridSortMode.MultipleColumn);
        })
        .Filterable(filterable => filterable.Mode(GridFilterMode.Row))
        .Scrollable()
        .Pageable()
        .DataSource(dataSource => dataSource
            .Ajax()
            .Model(model => model.Id(p => p.CompTypeId))
            .Read(read => read.Action("ComponentTypes_Read", "ComponentTypes"))
            .Create(create => create.Action("ComponentTypes_Create", "ComponentTypes"))
            .Destroy(destroy => destroy.Action("ComponentTypes_Delete", "ComponentTypes"))
            .Update(update => update.Action("ComponentTypes_Update", "ComponentTypes"))
            .PageSize(20)
        )
        .Excel(excel => excel
            .FileName("Catalog Component Type List.xlsx")
            .Filterable(true)
            .AllPages(true)
            .ProxyURL(Url.Action("Excel_Export_List", "ComponentTypes"))
        )
    )
</div>