@using CatalogData

@{
    Layout = "~/Views/Shared/_MainApplication.cshtml";
    ViewBag.Title = "Components List";
}
<div class="col-10" style="font-size: 10px;">
    <div class="row m-3">
        <div class="col-12">
            <h3>Components</h3>
        </div>
    </div>
    <hr/>
    @(Html.Kendo().Grid<Component>()
        .Name("ComponentsGrid")
        .Columns(columns =>
        {
            columns.Bound(c => c.ComponentId).Title("Id");
            columns.Bound(c => c.Description).Title("Description").ClientTemplate(Html.ActionLink("#=Description#", "Index" , "Components", new { compId = "#=ComponentId#" }, null).ToHtmlString());
            columns.Bound(c => c.UiiCode).Title("UII Code");
            columns.Bound(c => c.SystemId).Title("System Id");
            columns.Bound(c => c.IsEquip).Title("Is Equip?");
            columns.Bound(c => c.IsUii).Title("Is UII?");
        })
        .ToolBar(toolbar =>
        {
            toolbar.Create().Text("New Component");
            toolbar.Excel();
        })
        .Editable(editable => editable.Mode(GridEditMode.InLine))
        .Sortable(sortable =>
        {
            sortable.SortMode(GridSortMode.MultipleColumn);
        })
        .Filterable(filterable => filterable.Mode(GridFilterMode.Row))
        .Scrollable()
        .Pageable()
        .DataSource(dataSource => dataSource
            .Ajax()
            .Model(model => model.Id(p => p.ComponentId))
            .Read(read => read.Action("Components_Read", "Components"))
            .Create(create => create.Action("Components_Create", "Components"))
            .Destroy(destroy => destroy.Action("Components_Delete", "Components"))
            .Update(update => update.Action("Components_Update", "Components"))
            .PageSize(20)
        )
        .Excel(excel => excel
            .FileName("Catalog Component List.xlsx")
            .Filterable(true)
            .AllPages(true)
                .ProxyURL(Url.Action("Excel_Export_List", "Components"))
            )
    )
</div>